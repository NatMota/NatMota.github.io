<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Your Site's RSS Feed]]></title><description><![CDATA[This is Natanael's Portfolio Site]]></description><link>http://github.com/dylang/node-rss</link><generator>GatsbyJS</generator><lastBuildDate>Wed, 31 Jul 2024 20:28:56 GMT</lastBuildDate><item><title><![CDATA[Learning about remote work from API design]]></title><description><![CDATA[Learning about remote work from APIs]]></description><link>https://www.natslabs.com/blog/apis-remote-work</link><guid isPermaLink="false">https://www.natslabs.com/blog/apis-remote-work</guid><pubDate>Tue, 09 May 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;In this journey I learned you need to be as intentional as you can.&lt;/p&gt;&lt;h2&gt;Going one layer up&lt;/h2&gt;&lt;p&gt;Remote work has changed how we shape our relationships, communities, and work. Whatever doesn‚Äôt fit in the data cable must stay behind, for better or for worse. Since smoke signals, you can reach far but there is only so much you can say. &lt;/p&gt;&lt;p&gt;APIs are one way computers can show up remotely for work. They stand for Application Programming Interfaces. You can use APIs yourself to talk with a computer, but more importantly to get many computers to work with each other. Jeff Lawson, formerly from the messaging company Twilio, has written a &lt;a href=&quot;https://www.twilio.com/blog/ask-your-developer-a-playbook-available-now&quot;&gt;very approachable book&lt;/a&gt; introducing them.&lt;/p&gt;&lt;p&gt;He uses banking as an example in the book. ‚ÄúNowadays your bank is a mobile app and you like your bank if the software is fast, if it is bug free and if they regularly update it with new features and functionality that makes your life better‚Äù - wrote Jeff.&lt;/p&gt;&lt;p&gt;APIs are shaping business models. You can now put a whole company - with hundreds, thousands of people - behind a set of APIs. APIs can very quickly be improved on in the background, served to many users and even get piped to other APIs. Here are examples from &lt;a href=&quot;https://docs.stripe.com/api&quot;&gt;Stripe&lt;/a&gt; and from &lt;a href=&quot;https://shopify.dev/docs/api&quot;&gt;Shopify&lt;/a&gt;. These recipe books with sharp technical commands don&amp;#39;t need UI updates, language translations or you to take the bus there. Each API section could be maintained by one or multiple teams, changed many times a day.&lt;/p&gt;&lt;p&gt;To handle internet volume and shopper&amp;#39;s little patience for slow experiences, we need standardisation - whatever doesn‚Äôt fit in the API pipe must stay behind, for better or for worse. When you use smoke signals to signal danger to your tribe, attacks to your army, or a new pope, the ones receiving the message already know what it means from a preset list of answers. This is exactly how you scale communications with APIs. &lt;/p&gt;&lt;h2&gt;Building blocks&lt;/h2&gt;&lt;p&gt;Time for a practical example. We‚Äôll use your phone to get a custom notification using the same internet verbs that APIs use and adapt. &lt;/p&gt;&lt;p&gt;Download &lt;a href=&quot;https://ntfy.sh/&quot;&gt;ntfy&lt;/a&gt; on your phone for this part. (I‚Äôm not associated with them) This will let you receive push notifications for free on your phone. It&amp;#39;s free to use on public channels - for our purposes it&amp;#39;s perfectly fine.&lt;/p&gt;&lt;p&gt;Think of a title for your channel. I‚Äôm picking chocolate_chip_pancake.&lt;/p&gt;&lt;p&gt;Whilst I‚Äôm working on embedding this, you can still try it in a very simple app I built &lt;a href=&quot;https://l.linklyhq.com/l/1l8Ef&quot;&gt;here&lt;/a&gt;. Now make sure the title/topic is spelled the same way, and fire away! Sure enough, you will be able to receive your first ever self-made notification.&lt;/p&gt;&lt;p&gt;You can try the code yourself - it should work on most terminals&lt;/p&gt;&lt;p&gt;&lt;code&gt;curl -d &amp;quot;It‚Äôs pancake time! ü•û&amp;quot; &lt;/code&gt;&lt;a href=&quot;http://ntfy.sh/chocolate_chip_pancake&quot;&gt;&lt;code&gt;ntfy.sh/chocolate_chip_pancake&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Because cURL is a standard library for transferring data. -d in the command tells it you want to send data - the message itself. Now all you have to do is get some cookies, predict when your victim is hungry, and boom, send them an ad at the right time to convince them to buy from you at a distance.&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;code&gt;cURL&lt;/code&gt;&lt;/b&gt; takes care of delivering the message and showing you the server&amp;#39;s reply. Connected software everywhere makes use of these lower level tools to work. In this case, the ntfy server does the rest of the work of piping that message to your phone as a notification. There is more discussion of ntfy &lt;a href=&quot;https://news.ycombinator.com/item?id=33517944&quot;&gt;here&lt;/a&gt;. &lt;/p&gt;&lt;h2&gt;Going one layer down&lt;/h2&gt;&lt;p&gt;Why do APIs look the way they look?&lt;/p&gt;&lt;p&gt;What patterns do you see between &lt;a href=&quot;https://stripe.com/docs/api&quot;&gt;Stripe‚Äôs&lt;/a&gt; and &lt;a href=&quot;https://shopify.dev/docs/api&quot;&gt;Shopify‚Äôs&lt;/a&gt; examples? As you look through the functionality, notice how they don‚Äôt promise the whole world, but very specific, targeted and regimented operations to help you use their service.&lt;/p&gt;&lt;p&gt;As it happens, it&amp;#39;s a pretty simple set of data changes:&lt;/p&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;&lt;p&gt;Operation&lt;/p&gt;&lt;/th&gt;&lt;th&gt;&lt;p&gt;Action&lt;/p&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; &lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;The &lt;code&gt;GET&lt;/code&gt; method requests a representation of the specified resource. Requests using &lt;code&gt;GET&lt;/code&gt; should only retrieve data. &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt; &lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;The &lt;code&gt;POST&lt;/code&gt; method submits an entity to the specified resource, often causing a change in state or side effects on the server. &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT&quot;&gt;&lt;code&gt;PUT&lt;/code&gt;&lt;/a&gt; &lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;The &lt;code&gt;PUT&lt;/code&gt; method replaces all current representations of the target resource with the request payload. &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/DELETE&quot;&gt;&lt;code&gt;DELETE&lt;/code&gt;&lt;/a&gt; &lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;The &lt;code&gt;DELETE&lt;/code&gt; method deletes the specified resource. &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;You can find 4-5 other less used actions &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods&quot;&gt;here&lt;/a&gt;. They are called request methods because a &amp;#39;server&amp;#39; like the ntfy server gets requests from another computer like ours which it acts on. In this communication model, our computer starting the discussion is called the client.&lt;/p&gt;&lt;p&gt;These actions are formally called HTTP request methods- the same language that powers the internet. Why do APIs use this? Because HTTP was designed to work at internet scale, and a lot of engineering was adapted to API building.&lt;/p&gt;&lt;p&gt;What makes an internet application scalable? &lt;/p&gt;&lt;h2&gt;Where were we?&lt;/h2&gt;&lt;p&gt;Right, how to apply API design to working remotely. &lt;/p&gt;&lt;p&gt;Two things are apparent when you pick up the phone line to talk to another person - you probably wont be able to work faster, and its not really the same as being there.&lt;/p&gt;&lt;p&gt;When everyone is on a multiplex line, the plot thickens. You still can‚Äôt talk or chat over other people. Whatever communication is happening human to human, is done in a sequential way. And humans process information in a sequential way too. If you apply some principles of API design, you can make yourself, your team and your professional network work more effectively. The trick is to standardise the right interactions which you can do at volume, and letting go of more ‚Äògenuine‚Äô dimensions.&lt;/p&gt;&lt;p&gt;The point of APIs is that while they can be complex and have many functions, they should not be complicated to use. An API that takes a long time to implement is not a great API. There will always be a competitor around the corner with better usability - basically how quickly a user can achieve their goals with it.&lt;/p&gt;&lt;h2&gt;Making remote work more deliberate&lt;/h2&gt;&lt;p&gt;With that in mind, here are some API design rules of thumb that have interesting parallels to repetitive work and working remotely in a distributed way. Could you collaborate effectively with another human in a completely different timezone?&lt;/p&gt;&lt;p&gt;&lt;b&gt;Planning - API planning planning is always the most important step.  &lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Do you know what your goal is? How often do you review it?&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;This year?&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;This month?&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Today?&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Do you know what kind of work you will not do? Or delegate?&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Are your boundaries well defined?&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Are there any upcoming events that will affect your capacity to help effectively?&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;Clear communication - API &amp;#39;contracts&amp;#39; clearly define how they can be used and don&amp;#39;t hide inconsistent behavior&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;How can you communicate more clearly?&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;How can you communicate more regularly?&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;How connected and informed do your teammates feel?&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;Collaboration and support - APIs often require collaboration between different teams or organisations to develop, maintain, and support them.&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Do you know your teammate‚Äôs goals?&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Do you know their preferred way of collaborating?&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Do you know how best to contribute to shared goals?&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;Documentation - A well-designed API must have clear, concise, and easily understood documentation to enable developers to integrate with it effectively.&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Do you have a guide to how best to deal with yourself?&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Managers in tech often create ‚Äòreadme‚Äô files, but you don‚Äôt have to be one to create yours. Some examples &lt;a href=&quot;https://hypercontext.com/blog/management-skills/49-manager-readmes&quot;&gt;here&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Is your self documentation, your team‚Äôs documentation, and your organization‚Äôs documentation clear?&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Do you have guidelines?&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Do you keep your documentation fresh? &lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;Standardization - Consistent API design patterns, naming conventions, and error handling make it easier for developers to understand and use the API.&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;How well do you know your tools of the trade?&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Are you aware of how you can update them in the future?&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Are you comfortable with all of them?&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Do you apply your tools, methods and processes consistently?&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;Scalability and performance - Good API design accounts for scalability and performance, ensuring that the API can handle growing numbers of users and data without degradation in quality.&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;How can you scale a team and maintain performance?&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;What are the tradeoffs there?&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;How should you set goals for teams to promote collaboration?&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;What parts of your work are repetitive? Which ones may no longer be needed?&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;Work empathetically and testing&lt;/b&gt; - &lt;b&gt;A well-designed API should be easy to use and understand, minimising developer friction and promoting adoption.&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;What assumptions am I making by communicating or acting this way?&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;What happened the last time someone was confused with something I said?&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;When you are communicating a new concept, method or to a new audience, how often do you test it first?&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;Flexibility and adaptability - A successful API should be able to evolve and adapt to changing requirements and technology trends without disrupting existing users.&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;When you introduce a new process, what do you keep the same?&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;How do you plan for change?&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Are there existing ‚Äòbuilding blocks‚Äô you could keep the same, instead of redoing it from scratch?&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Are your processes and communication fault tolerant? Do they forgive genuine or systemic mistakes like cognitive biases?&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;Leverage your network! APIs are more powerful when they are connected together&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Do you know what skills there are on your network?&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;How often do you leverage your network?&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Does your network serve a purpose?&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Do you see potential links in your network you could make happen?&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;And lastly, know when doing something in person would be more effective, if you have that luxury! &lt;/b&gt;&lt;/p&gt;</content:encoded></item></channel></rss>